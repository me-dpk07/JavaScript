
function sayMyName(){
    console.log("D");
    console.log("E");
    console.log("E");
    console.log("P");
    console.log("A");
    console.log("K");
}

sayMyName()    //==> sayMyName is reference ,() is execution

function addTwoNumbers(number1, number2){    // number 1 & number 2 are parameters of function
    console.log(number1 + number2);
}
let value = addTwoNumbers(5,6)   // ==> 5,6 are the arguments 

function addTwoNumbers(number1, number2){

    // let result = number1 + number2
    // return result       ===> method 1
    return number1 + number2     // ===> method 2 , better way      &&&& return is the last function after that none of code will run
}

const result = addTwoNumbers(3, 5)

console.log("Result: ", result);


function loginUserMessage(username){
    if(!username){
        console.log("PLease enter a username");   // ==> if username is not defined then print this
        return
    }
    return `${username} just logged in`
}

// console.log(loginUserMessage())    ==> will give you undefined
//console.log(loginUserMessage("Deepak"))   ==> it will overwrite sam and print deepak


function calculateCartPrice( ...num1){   //==> use spread method so that if more arguments come further by user like adding shopping cart then you can print
    return num1
}

// console.log(calculateCartPrice(200, 400, 500, 2000))

const user = {
    username: "Deepak",
    prices: 199
}

function handleObject(anyobject){
    console.log(`Username is ${anyobject.username} and price is ${anyobject.price}`);
}

// handleObject(user)
handleObject({
    username: "sam",
    price: 399
})

const myNewArray = [200, 400, 100, 600]

function returnSecondValue(getArray){
    return getArray[1]
}

// console.log(returnSecondValue(myNewArray));
console.log(returnSecondValue([200, 400, 500, 1000]));